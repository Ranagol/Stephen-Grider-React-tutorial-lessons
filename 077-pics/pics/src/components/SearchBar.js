import React from "react";

class SearchBar extends React.Component {

  state = { term: ''};

  // the event argument is the event the user generated by typing into the input field. Every letter typing is one additional event
  // When we press enter, the default behaviour of the form is to try to send the data to some api, and empty out the form.
  // We don't want this. We want to run our custom logic. We will use event.preventDefault() for this.
  onFormSubmit = event => {
    event.preventDefault();//take the event as an argument and don't do the default behaviour. In React, for every form this is a must.
    console.log(this.state.term);
    this.props.onSubmit(this.state.term);//here we are calling the parent's onSearchSubmit() function, which was sent
    //through props from parent to child, on order for the child to be able to pass back the term to the parent component.
    //And this is the way how the child->parent communication is happening. Parent sends a function, child activates this
    //function, but the actual function is still in the parent. The function's argument is from the state.
  };

  render() {
    return (
      <div className="ui segment">
        {/*<form onSubmit... the onsubmit here is a standard eventHandler. Do not mix it with the stupid onSubmit prop
        which accidentally has the same name. This will activate the onFormSubmit(). The onFormSubmit() will call from props
        the a function from the parent.*/}
        <form onSubmit = {this.onFormSubmit} className="ui form">
          <div className="field">
            <label >Image search</label>
            {/*e is shorthand for event. We could write event here instead of e. Every time when the user types into the input field
            we are going to update the state.term */}
            <input
              type="text"
              value={this.state.term}
              onChange = { (e) => this.setState({ term: e.target.value }) }
            />{/*  This just sets up the state.term value, and nothing else.*/}
          </div>
        </form>
      </div>
    );
  };
}

export default SearchBar;
